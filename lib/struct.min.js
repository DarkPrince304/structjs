!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?module.exports=e():t.Struct=e()}(this,function(){"use strict";var t=function(){};return t.mergeList=function(e,i){for(var n=e.head;n.next;)n=n.next;return n.next=i.head,e instanceof t.DoublyLinkedList&&(n.next.prev=n),e},t.LLNode=function(t){return this.data=t,this.next=null,this},t.LinkedList=function(){this.head={},this.size=0,this.add=function(e){if(0===this.size)this.head=e instanceof t.LLNode?e:new t.LLNode(e),console.log("Head"),this.size++;else{console.log("Not head");for(var i=this.head;i.next;)i=i.next;i.next=e instanceof t.LLNode?e:new t.LLNode(e),this.size++}},this.insert=function(e,i){var n=this.head;if(i>=this.size){for(;n.next;)n=n.next;n.next=e instanceof t.LLNode?e:new t.LLNode(e),this.size++}else if(0==i){var s=e instanceof t.LLNode?e:new t.LLNode(e);s.next=this.head,this.head=s,this.size++}else for(var r=0;n;){if(r+1==i){var s=e instanceof t.LLNode?e:new t.LLNode(e);s.next=n.next,n.next=s,this.size++;break}r++,n=n.next}},this["delete"]=function(t){var e=this.head;if(t==this.head.data){this.head;return this.head=this.head.next,void this.size--}for(var i=0;i<this.size;i++){if(e.next.data==t)return e.next=e.next.next,void this.size--;e=e.next}},this.deleteIndex=function(t){var e=this.head;if(0==t){this.head;return this.head=this.head.next,void this.size--}for(var i=0;i<this.size;i++){if(i+1==t)return e.next=e.next.next,void this.size--;e=e.next}},this.splitList=function(e){for(var i=this.head,n=[],s=0;s<this.size-1;s++){if(s+1==e){var r=new t.LinkedList;return r.head=i.next,r.size=this.size-(s+1),i.next=null,this.size=s+1,n.push(this,r),n}i=i.next}},this.contains=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return!0;e=e.next}return!1},this.find=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return e;e=e.next}},this.length=function(){return this.size},this.getHead=function(){return this.head}},t.DLLNode=function(t){return this.data=t,this.next=null,this.prev=null,this},t.DoublyLinkedList=function(){this.head={},this.size=0,this.add=function(e){if(0===this.size)this.head=e instanceof t.DLLNode?e:new t.DLLNode(e),console.log("Head"),this.size++;else{console.log("No head");for(var i=this.head;i.next;)i=i.next;i.next=e instanceof t.DLLNode?e:new t.DLLNode(e),i.next.prev=i,this.size++}},this["delete"]=function(t){var e=this.head;if(t==this.head.data){this.head;return this.head=this.head.next,this.head.prev=null,void this.size--}for(var i=0;i<this.size;i++){if(e.next.data==t)return e.next=e.next.next,e.next.prev=e,void this.size--;e=e.next}},this.deleteIndex=function(t){var e=this.head;if(0==t){this.head;return this.head=this.head.next,this.head.prev=null,void this.size--}for(var i=0;i<this.size;i++){if(i+1==t)return e.next=e.next.next,e.next.prev=e,void this.size--;e=e.next}},this.splitList=function(e){for(var i=this.head,n=[],s=0;s<this.size-1;s++){if(s+1==e){var r=new t.LinkedList;return r.head=i.next,r.head.prev=null,r.size=this.size-(s+1),i.next=null,this.size=s+1,n.push(this,r),n}i=i.next}},this.contains=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return!0;e=e.next}return!1},this.find=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return e;e=e.next}},this.length=function(){return this.size},this.getHead=function(){return this.head}},t.CLLNode=function(t){return this.data=t,this.next=null,this},t.CircularLinkedList=function(){this.head={},this.size=0,this.tail={},this.add=function(e){if(0===this.size)this.head=e instanceof t.CLLNode?e:new t.CLLNode(e),this.head.next=this.head,this.tail=this.head,console.log("Head"),this.size++;else{for(var i=this.head,n=0;n<this.size-1;n++)i=i.next;i.next=e instanceof t.CLLNode?e:new t.CLLNode(e),i.next.next=this.head,this.tail=i.next,this.size++}},this["delete"]=function(t){var e=this.head;if(t==this.head.data){this.head;return this.head=this.head.next,void this.size--}for(var i=0;i<this.size;i++){if(e.next.data==t)return e.next=e.next.next,void this.size--;e=e.next}},this.deleteIndex=function(t){var e=this.head;if(0==t){this.head;return this.head=this.head.next,void this.size--}for(var i=0;i<this.size;i++){if(i+1==t)return e.next=e.next.next,void this.size--;e=e.next}},this.contains=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return!0;e=e.next}return!1},this.find=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return e;e=e.next}},this.length=function(){return this.size},this.getHead=function(){return this.head},this.getTail=function(){return this.tail}},t.BSTNode=function(t){return this.data=t,this.left=null,this.right=null,this.parent=null,this},t.BinarySearchTree=function(){function e(i,n){if(null==i)return i=n instanceof t.BSTNode?n:new t.BSTNode(n);if(n<i.data){var s={};s=e(i.left,n),s&&(s.parent=i,i.left=s)}else{var s={};s=e(i.right,n),s&&(s.parent=i,i.right=s)}}this.root={},this.nodes=0,this.height=0,this.add=function(i){if(0==this.height)this.root=i instanceof t.BSTNode?i:new t.BSTNode(i),this.height++;else{var n=this.root;e(n,i)}}},t.StackNode=function(t){return this.data=JSON&&JSON.stringify?JSON.stringify(t,null,2):String(t),this.next=null,this},t.Stack=function(){this.head={},this.size=0,this.push=function(e){if(0===this.size)this.head=e instanceof t.StackNode?e:new t.StackNode(e),this.size++;else{var i=e instanceof t.StackNode?e:new t.StackNode(e);i.next=this.head,this.head=i,this.size++}},this.pop=function(){this.head=this.head.next,this.size--},this.splitStack=function(e){for(var i=this.head,n=[],s=0;s<this.size-1;s++){if(s+1==e){var r=new t.Stack;return r.head=i.next,r.size=this.size-(s+1),i.next=null,this.size=s+1,n.push(this,r),n}i=i.next}},this.contains=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return!0;e=e.next}return!1},this.find=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return e;e=e.next}},this.length=function(){return this.size},this.getHead=function(){return this.head}},t.QueueNode=function(t){return this.data=JSON&&JSON.stringify?JSON.stringify(t,null,2):String(t),this.next=null,this},t.Queue=function(){this.head={},this.size=0,this.push=function(e){if(0===this.size)this.head=e instanceof t.LLNode?e:new t.QueueNode(e),console.log("Head"),this.size++;else{console.log("Not head");for(var i=this.head;i.next;)i=i.next;i.next=e instanceof t.LLNode?e:new t.QueueNode(e),this.size++}},this.pop=function(){this.head=this.head.next,this.size--},this.splitList=function(e){for(var i=this.head,n=[],s=0;s<this.size-1;s++){if(s+1==e){var r=new t.Queue;return r.head=i.next,r.size=this.size-(s+1),i.next=null,this.size=s+1,n.push(this,r),n}i=i.next}},this.contains=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return!0;e=e.next}return!1},this.find=function(t){for(var e=this.head,i=0;i<this.size;i++){if(e.data==t)return e;e=e.next}},this.length=function(){return this.size},this.getHead=function(){return this.head}},t.SuffixTree=function(t){this.head={},this.validate=function(t){if(void 0===t||null===t)throw new Error("The given word is invalid.");if("string"!=typeof t)throw new Error("The given word is not a string")},this.add=function(t){this.validate(t);for(var e=this.head,i=0;i<t.length;i++)t[i]in e||(e[t[i]]={}),e=e[t[i]];e.$=1},this.hasWord=function(t){this.validate(t);for(var e=this.head,i=0;i<t.length;i++){if(!(t[i]in e))return!1;e=e[t[i]]}return 1===e.$},this.remove=function(t){this.validate(t);var e=function(t){return 0===Object.keys(t).length},i=function(t,n,s){if(void 0===t)throw new Error("Bad Word");if(n>=t.length)throw new Error("Bad index to check for deletion.");if(void 0===s)throw new Error("Bad Node at "+n+" for "+t);return n===t.length-1?delete s.$&&e(s):i(t,n+1,s[t[n+1]])?delete s[t[n+1]]&&e(s):!1};i(t,-1,this.head)},this.sort=function(){var t="",e=[],i=function(t,e,n){for(var s in t)"$"===s?n.push(e):i(t[s],e+s,n)};return i(this.head,t,e),e},this.send=t;for(var e=0;e<t.length;e++)this.add(this.send),this.send=this.send.substr(1)},t.Trie=function(){this.head={},this.validate=function(t){if(void 0===t||null===t)throw new Error("The given word is invalid.");if("string"!=typeof t)throw new Error("The given word is not a string")},this.add=function(t){this.validate(t);for(var e=this.head,i=0;i<t.length;i++)t[i]in e||(e[t[i]]={}),e=e[t[i]];e.$=1},this.hasWord=function(t){this.validate(t);for(var e=this.head,i=0;i<t.length;i++){if(!(t[i]in e))return!1;e=e[t[i]]}return 1===e.$},this.remove=function(t){this.validate(t);var e=function(t){return 0===Object.keys(t).length},i=function(t,n,s){if(void 0===t)throw new Error("Bad Word");if(n>=t.length)throw new Error("Bad index to check for deletion.");if(void 0===s)throw new Error("Bad Node at "+n+" for "+t);return n===t.length-1?delete s.$&&e(s):i(t,n+1,s[t[n+1]])?delete s[t[n+1]]&&e(s):!1};i(t,-1,this.head)},this.sort=function(){var t="",e=[],i=function(t,e,n){for(var s in t)"$"===s?n.push(e):i(t[s],e+s,n)};return i(this.head,t,e),e}},t.MaxHeap=function(t){if(this.array=[],this.shouldSwap=function(t,e){return t>e},this.getParentIndex=function(t){return Math.floor((t-1)/2)},this.getLeftChild=function(t){return 2*t+1},this.getRightChild=function(t){return 2*t+2},this.add=function(t){if(void 0===t)throw"data must be valid to add";this.array.push(t),this.bubbleUp(this.array.length-1,t)},this.bubbleUp=function(t,e){if(t>0){var i=this.getParentIndex(t),n=this.array[i];this.shouldSwap(e,n)&&(this.array[i]=e,this.array[t]=n,this.bubbleUp(i,e))}},this.bubbleDown=function(t,e){if(t<this.array.length){var i=t,n=e,s=this.getLeftChild(t),r=this.getRightChild(t),a=function(t,e,s){if(t<e.length){var r=e[t];s(r,n)&&(i=t,n=r)}};a(s,this.array,this.shouldSwap),a(r,this.array,this.shouldSwap),i!==t&&(this.array[t]=n,this.array[i]=e,this.bubbleDown(i,e))}},this.removeHead=function(){var t=this.array[0],e=this.array.pop();return this.array[0]=e,this.bubbleDown(0,e),t},t&&t instanceof Array){this.array=t;for(var e=this.array.length,i=Math.floor((e-1)/2);i>=0;i--)this.bubbleDown(i,this.array[i])}return this},t.MinHeap=function(t){if(this.array=[],this.shouldSwap=function(t,e){return e>t},this.getParentIndex=function(t){return Math.floor((t-1)/2)},this.getLeftChild=function(t){return 2*t+1},this.getRightChild=function(t){return 2*t+2},this.add=function(t){if(void 0===t)throw"data must be valid to add";this.array.push(t),this.bubbleUp(this.array.length-1,t)},this.bubbleUp=function(t,e){if(t>0){var i=this.getParentIndex(t),n=this.array[i];this.shouldSwap(e,n)&&(this.array[i]=e,this.array[t]=n,this.bubbleUp(i,e))}},this.bubbleDown=function(t,e){if(t<this.array.length){var i=t,n=e,s=this.getLeftChild(t),r=this.getRightChild(t),a=function(t,e,s){if(t<e.length){var r=e[t];s(r,n)&&(i=t,n=r)}};a(s,this.array,this.shouldSwap),a(r,this.array,this.shouldSwap),i!==t&&(this.array[t]=n,this.array[i]=e,this.bubbleDown(i,e))}},this.removeHead=function(){var t=this.array[0],e=this.array.pop();return this.array[0]=e,this.bubbleDown(0,e),t},t&&t instanceof Array){this.array=t;for(var e=this.array.length,i=Math.floor((e-1)/2);i>=0;i--)this.bubbleDown(i,this.array[i])}return this},t.draw=function(e){function i(t){if(null!=t){var e={};e.parent=t.data,null!=t.left&&(e.name=t.left.data,s.push(e)),i(t.left);var e={};e.parent=t.data,null!=t.right&&(e.name=t.right.data,s.push(e)),i(t.right)}}function n(t){var e=x.nodes(z).reverse(),i=x.links(e);e.forEach(function(t){t.y=180*t.depth});var n=p.selectAll("g.node").data(e,function(t){return t.id||(t.id=++h)}),s=n.enter().append("g").attr("class","node").attr("transform",function(t){return"translate("+t.y+","+t.x+")"});s.append("circle").attr("r",10).style("fill","#fff"),s.append("text").attr("x",function(t){return t.children||t._children?-13:13}).attr("dy",".35em").attr("text-anchor",function(t){return t.children||t._children?"end":"start"}).text(function(t){return t.name}).style("fill-opacity",1);var r=p.selectAll("path.link").data(i,function(t){return t.target.id});r.enter().insert("path","g").attr("class","link").attr("d",g)}var s=[];if(e instanceof t.LinkedList){var r=e.getHead(),a={};for(a.parent="null",a.name=r.data,s.push(a);r.next;){var a={};a.parent=r.data,a.name=r.next.data,s.push(a),r=r.next}}else if(e instanceof t.CircularLinkedList){var r=e.getHead(),a={};a.parent="null",a.name=r.data,s.push(a);for(var h=0;h<e.length();h++){var a={};a.parent=r.data,a.name=r.next.data,s.push(a),r=r.next}}else if(e instanceof t.DoublyLinkedList){var r=e.getHead(),a={};a.parent="null",a.name=r.data,s.push(a);for(var h=0;h<e.length()-1;h++){var a={};a.parent=r.data,a.name=r.next.data,s.push(a),r=r.next}for(var r=e.getHead().next,h=0;h<e.length()-1;h++){var a={};a.parent=r.data,a.name=r.prev.data,s.push(a),r=r.next}}else if(e instanceof t.BinarySearchTree){var o=e.root,a={};a.parent="null",a.name=o.data,s.push(a),i(o)}else if(e instanceof t.MaxHeap||e instanceof t.MinHeap){var d=e.array.length/2;console.log(e.array);var a={};a.parent="null",a.name=e.array[0].toString(),s.push(a);for(var h=0;d-1>h;h++){var a={};a.parent=e.array[h].toString(),a.name=e.array[2*h+1].toString(),s.push(a);var a={};a.parent=e.array[h].toString(),a.name=e.array[2*h+2].toString(),s.push(a)}}console.log(s);var u=s.reduce(function(t,e){return t[e.name]=e,t},{}),f=[];s.forEach(function(t){var e=u[t.parent];e?(e.children||(e.children=[])).push(t):f.push(t)});var l={top:20,right:120,bottom:20,left:120},c=960,v=500,h=0,x=d3.layout.tree().size([v,c]),g=d3.svg.diagonal().projection(function(t){return[t.y,t.x]});d3.select("svg")&&d3.select("svg").remove();var p=d3.select("body").append("svg").attr("width",c+l.right+l.left).attr("height",v+l.top+l.bottom).append("g").attr("transform","translate("+l.left+","+l.top+")"),z=f[0];n(z)},t});